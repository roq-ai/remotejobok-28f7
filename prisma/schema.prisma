generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model bid {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  job_id     String   @db.Uuid
  amount     Int?
  proposal   String?  @db.VarChar(255)
  status     String?  @db.VarChar(255)
  duration   Int?
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  job        job      @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  location    String?  @db.VarChar(255)
  industry    String?  @db.VarChar(255)
  size        Int?
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job         job[]
}

model external_integration {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.Uuid
  service_name String?  @db.VarChar(255)
  status       String?  @db.VarChar(255)
  api_key      String?  @db.VarChar(255)
  api_secret   String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model job {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String   @db.VarChar(255)
  description      String?  @db.VarChar(255)
  company_id       String   @db.Uuid
  category         String?  @db.VarChar(255)
  experience_level String?  @db.VarChar(255)
  salary_range     String?  @db.VarChar(255)
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  bid              bid[]
  company          company  @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  review           review[]
}

model review {
  id                            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                       String   @db.Uuid
  rating                        Int?
  comment                       String?  @db.VarChar(255)
  job_id                        String   @db.Uuid
  reviewee_id                   String   @db.Uuid
  created_at                    DateTime @default(now()) @db.Timestamp(6)
  updated_at                    DateTime @default(now()) @db.Timestamp(6)
  job                           job      @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_review_reviewee_idTouser user     @relation("review_reviewee_idTouser", fields: [reviewee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_review_user_idTouser     user     @relation("review_user_idTouser", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                              String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                           String                 @unique @db.VarChar(255)
  firstName                       String?                @db.VarChar(255)
  lastName                        String?                @db.VarChar(255)
  roq_user_id                     String                 @db.VarChar(255)
  tenant_id                       String                 @db.VarChar(255)
  created_at                      DateTime               @default(now()) @db.Timestamp(6)
  updated_at                      DateTime               @default(now()) @db.Timestamp(6)
  bid                             bid[]
  company                         company[]
  external_integration            external_integration[]
  review_review_reviewee_idTouser review[]               @relation("review_reviewee_idTouser")
  review_review_user_idTouser     review[]               @relation("review_user_idTouser")
}
